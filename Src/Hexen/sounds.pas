//------------------------------------------------------------------------------
//
//  DelphiHexen: A modified and improved Hexen port for Windows
//  based on original Linux Doom as published by "id Software", on
//  Hexen source as published by "Raven" software and DelphiDoom
//  as published by Jim Valavanis.
//  Copyright (C) 2004-2013 by Jim Valavanis
//
//  This program is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public License
//  as published by the Free Software Foundation; either version 2
//  of the License, or (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
//  02111-1307, USA.
//
// DESCRIPTION:
//  Created by the sound utility written by Dave Taylor.
//  Kept as a sample, DOOM2  sounds. Frozen.
//
//------------------------------------------------------------------------------
//  E-Mail: jimmyvalavanis@yahoo.gr
//  Site  : http://sourceforge.net/projects/delphidoom/
//------------------------------------------------------------------------------

{$I Doom32.inc}

unit sounds;

interface

uses
  d_delphi;

//
// SoundFX struct.
//

type
  Psfxinfo_t = ^sfxinfo_t;

  sfxinfo_t = record
    tagname: string;

    // up to 6-character name
    name: string;

    // Sfx priority
    priority: integer;

    // this is checked every second to see if sound
    // can be thrown out (if 0, then decrement, if -1,
    // then throw out, if > 0, then it is in use)
    usefulness: integer;

    // pitch if a link
    pitch: integer;

    // sound data
    data: pointer;

    // lump number of sfx
    lumpnum: integer;

    numchannels: integer; // total number of channels a sound type may occupy
    changePitch: boolean;

    // JVAL: Random list
    randomsoundlist: TDNumberList;
  end;

//
// MusicInfo struct.
//
  musicinfo_t = record
    // up to 6-character name
    name: string;
    mapname: string;

    // lump number of music
    lumpnum: integer;

    // music data
    data: pointer;

    // music handle once registered
    handle: integer;
    // is an mp3?
    mp3stream: TStream;
  end;
  Pmusicinfo_t = ^musicinfo_t;

//
// Identifiers for all music in game.
//

  musicenum_t = (
    mus_None,

    mus_map01,
    mus_map02,
    mus_map03,
    mus_map04,
    mus_map05,
    mus_map06,
    mus_map07,
    mus_map08,
    mus_map09,
    mus_map10,

    mus_map11,
    mus_map12,
    mus_map13,
    mus_map14,
    mus_map15,
    mus_map16,
    mus_map17,
    mus_map18,
    mus_map19,
    mus_map20,

    mus_map21,
    mus_map22,
    mus_map23,
    mus_map24,
    mus_map25,
    mus_map26,
    mus_map27,
    mus_map28,
    mus_map29,
    mus_map30,

    mus_map31,
    mus_map32,
    mus_map33,
    mus_map34,
    mus_map35,
    mus_map36,
    mus_map37,
    mus_map38,
    mus_map39,
    mus_map40,

    mus_map41,
    mus_map42,
    mus_map43,
    mus_map44,
    mus_map45,
    mus_map46,
    mus_map47,
    mus_map48,
    mus_map49,
    mus_map50,

    mus_map51,
    mus_map52,
    mus_map53,
    mus_map54,
    mus_map55,
    mus_map56,
    mus_map57,
    mus_map58,
    mus_map59,
    mus_map60,

    mus_map61,
    mus_map62,
    mus_map63,
    mus_map64,
    mus_map65,
    mus_map66,
    mus_map67,
    mus_map68,
    mus_map69,
    mus_map70,

    mus_map71,
    mus_map72,
    mus_map73,
    mus_map74,
    mus_map75,
    mus_map76,
    mus_map77,
    mus_map78,
    mus_map79,
    mus_map80,

    mus_map81,
    mus_map82,
    mus_map83,
    mus_map84,
    mus_map85,
    mus_map86,
    mus_map87,
    mus_map88,
    mus_map89,
    mus_map90,

    mus_map91,
    mus_map92,
    mus_map93,
    mus_map94,
    mus_map95,
    mus_map96,
    mus_map97,
    mus_map98,
    mus_map99,

    mus_hexen,
    mus_hub,
    mus_hall,
    mus_orb,
    mus_chess,
    
    NUMMUSIC
  );


//
// Identifiers for all sfx in game.
//

  sfxenum_t = (
    SFX_NONE,
    SFX_PLAYER_FIGHTER_NORMAL_DEATH,        // class specific death screams
    SFX_PLAYER_FIGHTER_CRAZY_DEATH,
    SFX_PLAYER_FIGHTER_EXTREME1_DEATH,
    SFX_PLAYER_FIGHTER_EXTREME2_DEATH,
    SFX_PLAYER_FIGHTER_EXTREME3_DEATH,
    SFX_PLAYER_FIGHTER_BURN_DEATH,
    SFX_PLAYER_CLERIC_NORMAL_DEATH,
    SFX_PLAYER_CLERIC_CRAZY_DEATH,
    SFX_PLAYER_CLERIC_EXTREME1_DEATH,
    SFX_PLAYER_CLERIC_EXTREME2_DEATH,
    SFX_PLAYER_CLERIC_EXTREME3_DEATH,
    SFX_PLAYER_CLERIC_BURN_DEATH,
    SFX_PLAYER_MAGE_NORMAL_DEATH,
    SFX_PLAYER_MAGE_CRAZY_DEATH,
    SFX_PLAYER_MAGE_EXTREME1_DEATH,
    SFX_PLAYER_MAGE_EXTREME2_DEATH,
    SFX_PLAYER_MAGE_EXTREME3_DEATH,
    SFX_PLAYER_MAGE_BURN_DEATH,
    SFX_PLAYER_FIGHTER_PAIN,
    SFX_PLAYER_CLERIC_PAIN,
    SFX_PLAYER_MAGE_PAIN,
    SFX_PLAYER_FIGHTER_GRUNT,
    SFX_PLAYER_CLERIC_GRUNT,
    SFX_PLAYER_MAGE_GRUNT,
    SFX_PLAYER_LAND,
    SFX_PLAYER_POISONCOUGH,
    SFX_PLAYER_FIGHTER_FALLING_SCREAM,    // class specific falling screams
    SFX_PLAYER_CLERIC_FALLING_SCREAM,
    SFX_PLAYER_MAGE_FALLING_SCREAM,
    SFX_PLAYER_FALLING_SPLAT,
    SFX_PLAYER_FIGHTER_FAILED_USE,
    SFX_PLAYER_CLERIC_FAILED_USE,
    SFX_PLAYER_MAGE_FAILED_USE,
    SFX_PLATFORM_START,
    SFX_PLATFORM_STARTMETAL,
    SFX_PLATFORM_STOP,
    SFX_STONE_MOVE,
    SFX_METAL_MOVE,
    SFX_DOOR_OPEN,
    SFX_DOOR_LOCKED,
    SFX_DOOR_METAL_OPEN,
    SFX_DOOR_METAL_CLOSE,
    SFX_DOOR_LIGHT_CLOSE,
    SFX_DOOR_HEAVY_CLOSE,
    SFX_DOOR_CREAK,
    SFX_PICKUP_WEAPON,
    SFX_PICKUP_ARTIFACT,
    SFX_PICKUP_KEY,
    SFX_PICKUP_ITEM,
    SFX_PICKUP_PIECE,
    SFX_WEAPON_BUILD,
    SFX_ARTIFACT_USE,
    SFX_ARTIFACT_BLAST,
    SFX_TELEPORT,
    SFX_THUNDER_CRASH,
    SFX_FIGHTER_PUNCH_MISS,
    SFX_FIGHTER_PUNCH_HITTHING,
    SFX_FIGHTER_PUNCH_HITWALL,
    SFX_FIGHTER_GRUNT,    
    SFX_FIGHTER_AXE_HITTHING,    
    SFX_FIGHTER_HAMMER_MISS,
    SFX_FIGHTER_HAMMER_HITTHING,
    SFX_FIGHTER_HAMMER_HITWALL,
    SFX_FIGHTER_HAMMER_CONTINUOUS,
    SFX_FIGHTER_HAMMER_EXPLODE,
    SFX_FIGHTER_SWORD_FIRE,
    SFX_FIGHTER_SWORD_EXPLODE,
    SFX_CLERIC_CSTAFF_FIRE,
    SFX_CLERIC_CSTAFF_EXPLODE,
    SFX_CLERIC_CSTAFF_HITTHING,
    SFX_CLERIC_FLAME_FIRE,
    SFX_CLERIC_FLAME_EXPLODE,
    SFX_CLERIC_FLAME_CIRCLE,
    SFX_MAGE_WAND_FIRE,
    SFX_MAGE_LIGHTNING_FIRE,
    SFX_MAGE_LIGHTNING_ZAP,
    SFX_MAGE_LIGHTNING_CONTINUOUS,
    SFX_MAGE_LIGHTNING_READY,
    SFX_MAGE_SHARDS_FIRE,
    SFX_MAGE_SHARDS_EXPLODE,
    SFX_MAGE_STAFF_FIRE,
    SFX_MAGE_STAFF_EXPLODE,
    SFX_SWITCH1,
    SFX_SWITCH2,
    SFX_SERPENT_SIGHT,
    SFX_SERPENT_ACTIVE,
    SFX_SERPENT_PAIN,
    SFX_SERPENT_ATTACK,
    SFX_SERPENT_MELEEHIT,
    SFX_SERPENT_DEATH,
    SFX_SERPENT_BIRTH,
    SFX_SERPENTFX_CONTINUOUS,
    SFX_SERPENTFX_HIT,
    SFX_POTTERY_EXPLODE,
    SFX_DRIP,
    SFX_CENTAUR_SIGHT,
    SFX_CENTAUR_ACTIVE,
    SFX_CENTAUR_PAIN,
    SFX_CENTAUR_ATTACK,
    SFX_CENTAUR_DEATH,
    SFX_CENTAURLEADER_ATTACK,
    SFX_CENTAUR_MISSILE_EXPLODE,
    SFX_WIND,
    SFX_BISHOP_SIGHT,
    SFX_BISHOP_ACTIVE,
    SFX_BISHOP_PAIN,
    SFX_BISHOP_ATTACK,
    SFX_BISHOP_DEATH,
    SFX_BISHOP_MISSILE_EXPLODE,
    SFX_BISHOP_BLUR,
    SFX_DEMON_SIGHT,
    SFX_DEMON_ACTIVE,
    SFX_DEMON_PAIN,
    SFX_DEMON_ATTACK,
    SFX_DEMON_MISSILE_FIRE,
    SFX_DEMON_MISSILE_EXPLODE,
    SFX_DEMON_DEATH,
    SFX_WRAITH_SIGHT,
    SFX_WRAITH_ACTIVE,
    SFX_WRAITH_PAIN,
    SFX_WRAITH_ATTACK,
    SFX_WRAITH_MISSILE_FIRE,
    SFX_WRAITH_MISSILE_EXPLODE,
    SFX_WRAITH_DEATH,
    SFX_PIG_ACTIVE1,
    SFX_PIG_ACTIVE2,
    SFX_PIG_PAIN,
    SFX_PIG_ATTACK,
    SFX_PIG_DEATH,
    SFX_MAULATOR_SIGHT,
    SFX_MAULATOR_ACTIVE,
    SFX_MAULATOR_PAIN,
    SFX_MAULATOR_HAMMER_SWING,
    SFX_MAULATOR_HAMMER_HIT,
    SFX_MAULATOR_MISSILE_HIT,
    SFX_MAULATOR_DEATH,
    SFX_FREEZE_DEATH,
    SFX_FREEZE_SHATTER,
    SFX_ETTIN_SIGHT,
    SFX_ETTIN_ACTIVE,
    SFX_ETTIN_PAIN,
    SFX_ETTIN_ATTACK,
    SFX_ETTIN_DEATH,
    SFX_FIRED_SPAWN,
    SFX_FIRED_ACTIVE,
    SFX_FIRED_PAIN,
    SFX_FIRED_ATTACK,
    SFX_FIRED_MISSILE_HIT,
    SFX_FIRED_DEATH,
    SFX_ICEGUY_SIGHT,
    SFX_ICEGUY_ACTIVE,
    SFX_ICEGUY_ATTACK,
    SFX_ICEGUY_FX_EXPLODE,
    SFX_SORCERER_SIGHT,
    SFX_SORCERER_ACTIVE,
    SFX_SORCERER_PAIN,
    SFX_SORCERER_SPELLCAST,
    SFX_SORCERER_BALLWOOSH,
    SFX_SORCERER_DEATHSCREAM,
    SFX_SORCERER_BISHOPSPAWN,
    SFX_SORCERER_BALLPOP,
    SFX_SORCERER_BALLBOUNCE,
    SFX_SORCERER_BALLEXPLODE,
    SFX_SORCERER_BIGBALLEXPLODE,
    SFX_SORCERER_HEADSCREAM,
    SFX_DRAGON_SIGHT,
    SFX_DRAGON_ACTIVE,
    SFX_DRAGON_WINGFLAP,
    SFX_DRAGON_ATTACK,
    SFX_DRAGON_PAIN,
    SFX_DRAGON_DEATH,
    SFX_DRAGON_FIREBALL_EXPLODE,
    SFX_KORAX_SIGHT,
    SFX_KORAX_ACTIVE,
    SFX_KORAX_PAIN,
    SFX_KORAX_ATTACK,
    SFX_KORAX_COMMAND,
    SFX_KORAX_DEATH,
    SFX_KORAX_STEP,
    SFX_THRUSTSPIKE_RAISE,
    SFX_THRUSTSPIKE_LOWER,
    SFX_STAINEDGLASS_SHATTER,
    SFX_FLECHETTE_BOUNCE,
    SFX_FLECHETTE_EXPLODE,
    SFX_LAVA_MOVE,
    SFX_WATER_MOVE,
    SFX_ICE_STARTMOVE,
    SFX_EARTH_STARTMOVE,
    SFX_WATER_SPLASH,
    SFX_LAVA_SIZZLE,
    SFX_SLUDGE_GLOOP,
    SFX_CHOLY_FIRE,
    SFX_SPIRIT_ACTIVE,
    SFX_SPIRIT_ATTACK,
    SFX_SPIRIT_DIE,
    SFX_VALVE_TURN,
    SFX_ROPE_PULL,
    SFX_FLY_BUZZ,
    SFX_IGNITE,
    SFX_PUZZLE_SUCCESS,
    SFX_PUZZLE_FAIL_FIGHTER,
    SFX_PUZZLE_FAIL_CLERIC,
    SFX_PUZZLE_FAIL_MAGE,
    SFX_EARTHQUAKE,
    SFX_BELLRING,
    SFX_TREE_BREAK,
    SFX_TREE_EXPLODE,
    SFX_SUITOFARMOR_BREAK,
    SFX_POISONSHROOM_PAIN,
    SFX_POISONSHROOM_DEATH,
    SFX_AMBIENT1,
    SFX_AMBIENT2,
    SFX_AMBIENT3,
    SFX_AMBIENT4,
    SFX_AMBIENT5,
    SFX_AMBIENT6,
    SFX_AMBIENT7,
    SFX_AMBIENT8,
    SFX_AMBIENT9,
    SFX_AMBIENT10,
    SFX_AMBIENT11,
    SFX_AMBIENT12,
    SFX_AMBIENT13,
    SFX_AMBIENT14,
    SFX_AMBIENT15,
    SFX_STARTUP_TICK,
    SFX_SWITCH_OTHERLEVEL,
    SFX_RESPAWN,
    SFX_KORAX_VOICE_1,
    SFX_KORAX_VOICE_2,
    SFX_KORAX_VOICE_3,
    SFX_KORAX_VOICE_4,
    SFX_KORAX_VOICE_5,
    SFX_KORAX_VOICE_6,
    SFX_KORAX_VOICE_7,
    SFX_KORAX_VOICE_8,
    SFX_KORAX_VOICE_9,
    SFX_BAT_SCREAM,
    SFX_CHAT,
    SFX_MENU_MOVE,
    SFX_CLOCK_TICK,
    SFX_FIREBALL,
    SFX_PUPPYBEAT,
    SFX_MYSTICINCANT,
    DO_NUMSFX
  );

const
  MAX_NUMSFX = Ord(DO_NUMSFX) + 1024; // JVAL 1024 extra sounds

const
  S_music: array[0..Ord(NUMMUSIC) - 1] of musicinfo_t = (
    (name: '';       mapname: '';      lumpnum: 0; data: nil; handle: 0; mp3stream: nil),

    (name: ''; mapname: 'map01'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map02'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map03'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map04'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map05'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map06'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map07'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map08'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map09'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map10'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),

    (name: ''; mapname: 'map11'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map12'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map13'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map14'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map15'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map16'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map17'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map18'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map19'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map20'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),

    (name: ''; mapname: 'map21'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map22'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map23'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map24'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map25'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map26'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map27'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map28'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map29'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map30'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),

    (name: ''; mapname: 'map31'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map32'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map33'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map34'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map35'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map36'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map37'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map38'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map39'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map40'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),

    (name: ''; mapname: 'map41'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map42'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map43'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map44'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map45'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map46'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map47'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map48'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map49'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map50'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),

    (name: ''; mapname: 'map51'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map52'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map53'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map54'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map55'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map56'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map57'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map58'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map59'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map60'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),

    (name: ''; mapname: 'map61'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map62'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map63'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map64'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map65'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map66'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map67'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map68'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map69'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map70'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),

    (name: ''; mapname: 'map71'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map72'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map73'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map74'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map75'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map76'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map77'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map78'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map79'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map80'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),

    (name: ''; mapname: 'map81'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map82'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map83'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map84'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map85'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map86'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map87'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map88'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map89'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map90'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),

    (name: ''; mapname: 'map91'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map92'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map93'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map94'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map95'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map96'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map97'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map98'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: ''; mapname: 'map99'; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),

    (name: 'hexen'; mapname: ''; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: 'hub';   mapname: ''; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: 'hall';  mapname: ''; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: 'orb';   mapname: ''; lumpnum: 0; data: nil; handle: 0; mp3stream: nil),
    (name: 'chess'; mapname: ''; lumpnum: 0; data: nil; handle: 0; mp3stream: nil)
    
  );

  S_sfx: array[0..MAX_NUMSFX - 1] of sfxinfo_t = (
  // S_sfx[0] needs to be a dummy for odd reasons.
    (tagname: '';                             name:''; priority:   0; usefulness: -1; data: nil; lumpnum: 0; numchannels: 0; changePitch: false; randomsoundlist: nil),
    (tagname: 'PlayerFighterNormalDeath';     name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerFighterCrazyDeath';      name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerFighterExtreme1Death';   name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerFighterExtreme2Death';   name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerFighterExtreme3Death';   name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerFighterBurnDeath';       name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerClericNormalDeath';      name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerClericCrazyDeath';       name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerClericExtreme1Death';    name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerClericExtreme2Death';    name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerClericExtreme3Death';    name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerClericBurnDeath';        name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerMageNormalDeath';        name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'PlayerMageCrazyDeath';         name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'PlayerMageExtreme1Death';      name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'PlayerMageExtreme2Death';      name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'PlayerMageExtreme3Death';      name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'PlayerMageBurnDeath';          name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'PlayerFighterPain';            name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerClericPain';             name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerMagePain';               name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'PlayerFighterGrunt';           name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerClericGrunt';            name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerMageGrunt';              name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'PlayerLand';                   name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerPoisonCough';            name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerFighterFallingScream';   name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerClericFallingScream';    name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerMageFallingScream';      name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'PlayerFallingSplat';           name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerFighterFailedUse';       name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerClericFailedUse';        name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlayerMageFailedUse';          name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: false; randomsoundlist: nil),
    (tagname: 'PlatformStart';                name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlatformStartMetal';           name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PlatformStop';                 name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'StoneMove';                    name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MetalMove';                    name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DoorOpen';                     name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DoorLocked';                   name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DoorOpenMetal';                name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DoorCloseMetal';               name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DoorCloseLight';               name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DoorCloseHeavy';               name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DoorCreak';                    name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PickupWeapon';                 name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'PickupArtifact';               name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PickupKey';                    name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PickupItem';                   name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PickupPiece';                  name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'WeaponBuild';                  name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'UseArtifact';                  name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'BlastRadius';                  name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'Teleport';                     name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'ThunderCrash';                 name:''; priority:  30; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterPunchMiss';             name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterPunchHitThing';         name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterPunchHitWall';          name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterGrunt';                 name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterAxeHitThing';           name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterHammerMiss';            name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterHammerHitThing';        name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterHammerHitWall';         name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterHammerContinuous';      name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterHammerExplode';         name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterSwordFire';             name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FighterSwordExplode';          name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'ClericCStaffFire';             name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'ClericCStaffExplode';          name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'ClericCStaffHitThing';         name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'ClericFlameFire';              name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'ClericFlameExplode';           name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'ClericFlameCircle';            name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MageWandFire';                 name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MageLightningFire';            name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MageLightningZap';             name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MageLightningContinuous';      name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MageLightningReady';           name:''; priority:  30; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MageShardsFire';               name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MageShardsExplode';            name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MageStaffFire';                name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MageStaffExplode';             name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'Switch1';                      name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'Switch2';                      name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SerpentSight';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SerpentActive';                name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SerpentPain';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SerpentAttack';                name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SerpentMeleeHit';              name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SerpentDeath';                 name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SerpentBirth';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SerpentFXContinuous';          name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SerpentFXHit';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PotteryExplode';               name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'Drip';                         name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'CentaurSight';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'CentaurActive';                name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'CentaurPain';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'CentaurAttack';                name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'CentaurDeath';                 name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'CentaurLeaderAttack';          name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'CentaurMissileExplode';        name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'Wind';                         name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'BishopSight';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'BishopActive';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'BishopPain';                   name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'BishopAttack';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'BishopDeath';                  name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'BishopMissileExplode';         name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'BishopBlur';                   name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DemonSight';                   name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DemonActive';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DemonPain';                    name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DemonAttack';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DemonMissileFire';             name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DemonMissileExplode';          name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DemonDeath';                   name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'WraithSight';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'WraithActive';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'WraithPain';                   name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'WraithAttack';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'WraithMissileFire';            name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'WraithMissileExplode';         name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'WraithDeath';                  name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PigActive1';                   name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PigActive2';                   name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PigPain';                      name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PigAttack';                    name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PigDeath';                     name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MaulatorSight';                name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MaulatorActive';               name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MaulatorPain';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MaulatorHamSwing';             name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MaulatorHamHit';               name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MaulatorMissileHit';           name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MaulatorDeath';                name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FreezeDeath';                  name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FreezeShatter';                name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'EttinSight';                   name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'EttinActive';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'EttinPain';                    name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'EttinAttack';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'EttinDeath';                   name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FireDemonSpawn';               name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FireDemonActive';              name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FireDemonPain';                name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FireDemonAttack';              name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FireDemonMissileHit';          name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FireDemonDeath';               name:''; priority:  40; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'IceGuySight';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'IceGuyActive';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'IceGuyAttack';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'IceGuyMissileExplode';         name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererSight';                name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererActive';               name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererPain';                 name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererSpellCast';            name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererBallWoosh';            name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 4; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererDeathScream';          name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererBishopSpawn';          name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererBallPop';              name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererBallBounce';           name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 3; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererBallExplode';          name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 3; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererBigBallExplode';       name:''; priority:  80; usefulness: -1; data: nil; lumpnum: 0; numchannels: 3; changePitch: true; randomsoundlist: nil),
    (tagname: 'SorcererHeadScream';           name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DragonSight';                  name:''; priority:  64; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DragonActive';                 name:''; priority:  64; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DragonWingflap';               name:''; priority:  64; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DragonAttack';                 name:''; priority:  64; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DragonPain';                   name:''; priority:  64; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DragonDeath';                  name:''; priority:  64; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'DragonFireballExplode';        name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxSight';                   name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxActive';                  name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxPain';                    name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxAttack';                  name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxCommand';                 name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxDeath';                   name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxStep';                    name:''; priority: 128; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'ThrustSpikeRaise';             name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'ThrustSpikeLower';             name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'GlassShatter';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FlechetteBounce';              name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FlechetteExplode';             name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'LavaMove';                     name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'WaterMove';                    name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'IceStartMove';                 name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'EarthStartMove';               name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'WaterSplash';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'LavaSizzle';                   name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SludgeGloop';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'HolySymbolFire';               name:''; priority:  64; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SpiritActive';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SpiritAttack';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SpiritDie';                    name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'ValveTurn';                    name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'RopePull';                     name:''; priority:  36; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'FlyBuzz';                      name:''; priority:  20; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ignite';                       name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PuzzleSuccess';                name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PuzzleFailFighter';            name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PuzzleFailCleric';             name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PuzzleFailMage';               name:''; priority: 256; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'Earthquake';                   name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'BellRing';                     name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: false; randomsoundlist: nil),
    (tagname: 'TreeBreak';                    name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'TreeExplode';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SuitofArmorBreak';             name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PoisonShroomPain';             name:''; priority:  20; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PoisonShroomDeath';            name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient1';                     name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient2';                     name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient3';                     name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient4';                     name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient5';                     name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient6';                     name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient7';                     name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient8';                     name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient9';                     name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient10';                    name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient11';                    name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient12';                    name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient13';                    name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient14';                    name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'Ambient15';                    name:''; priority:   1; usefulness: -1; data: nil; lumpnum: 0; numchannels: 1; changePitch: true; randomsoundlist: nil),
    (tagname: 'StartupTick';                  name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'SwitchOtherLevel';             name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'Respawn';                      name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxVoiceGreetings';          name:''; priority: 512; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxVoiceReady';              name:''; priority: 512; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxVoiceBlood';              name:''; priority: 512; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxVoiceGame';               name:''; priority: 512; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxVoiceBoard';              name:''; priority: 512; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxVoiceWorship';            name:''; priority: 512; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxVoiceMaybe';              name:''; priority: 512; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxVoiceStrong';             name:''; priority: 512; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'KoraxVoiceFace';               name:''; priority: 512; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'BatScream';                    name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'Chat';                         name:''; priority: 512; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MenuMove';                     name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'ClockTick';                    name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'Fireball';                     name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'PuppyBeat';                    name:''; priority:  30; usefulness: -1; data: nil; lumpnum: 0; numchannels: 2; changePitch: true; randomsoundlist: nil),
    (tagname: 'MysticIncant';                 name:''; priority:  32; usefulness: -1; data: nil; lumpnum: 0; numchannels: 4; changePitch: true; randomsoundlist: nil),

    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),

    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),

    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: ''),
    (tagname: '')
  );


var
  numsfx: integer = Ord(DO_NUMSFX);

function S_GetSoundNumForName(const sfx_name: string): integer;

function S_GetSoundNameForNum(const sfx_num: integer): string;

function S_GetRandomSoundList(const sfx_num: integer): TDNumberList;

procedure S_FreeRandomSoundLists;

procedure S_FreeMP3Streams;

implementation

uses
  i_system,
  sc_decorate,
  w_wad;

function S_GetSoundNumForName(const sfx_name: string): integer;
var
  i: integer;
  name: string;
  sfx: Psfxinfo_t;
begin
  result := atoi(sfx_name, -1);
  if (result >= 0) and (result < numsfx) and (itoa(result) = sfx_name) then
    exit;

  if sfx_name = '' then
  begin
    I_Warning('S_GetSoundNumForName(): No sound name specified, using default'#13#10);
    result := Ord(SFX_CHAT);
    exit;
  end;

  name := strupper(SC_SoundAlias(sfx_name));
  for i := 1 to numsfx - 1 do
  begin
    sfx := @S_sfx[i];
    if (strupper(sfx.tagname) = name) or (strupper(sfx.name) = name) or ('DS' + strupper(sfx.name) = name) then
    begin
      result := i;
      exit;
    end;
  end;

  // JVAL: Not found, we will add a new sound

  if numsfx >= MAX_NUMSFX - 1 then // JVAL: Limit exceeded, we will use default sound :(
  begin
    I_Warning('S_GetSoundNumForName(): Can not add %s sound, limit of %d sounds exceeded'#13#10, [sfx_name, numsfx]);
    result := Ord(SFX_CHAT);
    exit;
  end;

  // JVAL: Register the new sound

  if Pos('DS', name) = 1 then
    name := Copy(name, 3, Length(name) - 2);
  if name = '' then // JVAL: Normally this should not happen!
  begin
    I_Warning('S_GetSoundNumForName(): No sound name specified, using default'#13#10);
    result := Ord(SFX_CHAT);
    exit;
  end;

  result := numsfx;
  sfx := @S_sfx[result];
  sfx.tagname := sfx_name;
  sfx.name := name;
  sfx.priority := 72;
  sfx.pitch := -1;
  sfx.data := nil;
  sfx.usefulness := 0;
  sfx.lumpnum :=  -1; // jval: was = 0;
  sfx.numchannels := 1;
  sfx.changePitch := false;
  sfx.randomsoundlist := nil;
  inc(numsfx);
end;

function S_GetSoundNameForNum(const sfx_num: integer): string;
begin
  if (sfx_num < 0) or (sfx_num >= numsfx) then
  begin
    result := '';
    exit;
  end;

  // JVAL: strupper -> for safety
  result := strupper(S_sfx[sfx_num].name);
end;

//
// JVAL
// Retrieve the random sound list for a sfx number
// Note
//  Random list is in range of '0'..'9', of the last char of sound name eg
//    dsxxx0
//    dsxxx1
//    dsxxx2
//    dsxxx3
//    dsxxx7
//    dsxxx9
// It is not required to be all the numbers in last char
// Random sound list is saved not only to the sfx_num, but also to other sounds numbers
// of the same 'random' group
// Check WAD for presence of lumps
function S_GetRandomSoundList(const sfx_num: integer): TDNumberList;
var
  sfxname: string;
  sfxname1: string;
  sfxname2: string;
  sfxname3: string;
  sfxnum: integer;
  check: integer;
  c: char;
begin
  sfxname := S_GetSoundNameForNum(sfx_num);
  if sfxname = '' then
  begin
    result := nil;
    exit;
  end;

  if S_sfx[sfx_num].randomsoundlist = nil then
    S_sfx[sfx_num].randomsoundlist := TDNumberList.Create;

  result := S_sfx[sfx_num].randomsoundlist;

  if result.Count > 0 then
    exit;

  check := Ord(sfxname[Length(sfxname)]);
  if (check < Ord('0')) or (check > Ord('9')) then
  begin
    result.Add(sfx_num);  // This sound for sure!
    exit;
  end;

  // JVAL: look first for 'ds....' sound names
  if Pos('DS', sfxname) = 1 then
  begin
    sfxname1 := sfxname;
    sfxname2 := Copy(sfxname, 3, Length(sfxname) - 2)
  end
  else
  begin
    sfxname1 := 'DS' + sfxname;
    sfxname2 := sfxname;
  end;
  sfxname3 := '';
  if Length(sfxname1) > 8 then
    SetLength(sfxname1, 8);
  if Length(sfxname2) > 8 then
    SetLength(sfxname2, 8);
  for c := '0' to '9' do
  begin
    sfxname1[Length(sfxname1)] := c;
    check := W_CheckNumForName(sfxname1);
    if check = -1 then
    begin
      sfxname2[Length(sfxname2)] := c;
      check := W_CheckNumForName(sfxname2);
      if check >= 0 then
        sfxname3 := sfxname2;
    end
    else
      sfxname3 := sfxname1;

    if check >= 0 then
    begin
      sfxnum := S_GetSoundNumForName(sfxname3);
      result.Add(sfxnum);
      S_sfx[sfxnum].lumpnum := check; // Save the lump number
      if S_sfx[sfxnum].randomsoundlist = nil then
        S_sfx[sfxnum].randomsoundlist := result;
    end;
  end;
end;

procedure S_FreeRandomSoundLists;
var
  i, j: integer;
  l: TDNumberList;
begin
  for i := 1 to numsfx - 1 do
  begin
    if S_sfx[i].randomsoundlist <> nil then
    begin
      l := S_sfx[i].randomsoundlist;
      for j := i + 1 to numsfx - 1 do
        if S_sfx[j].randomsoundlist = l then
          S_sfx[i].randomsoundlist := nil;
      FreeAndNil(S_sfx[i].randomsoundlist);
    end;
  end;
end;

procedure S_FreeMP3Streams;
var
  i, j: integer;
  s: TStream;
begin
  for i := 0 to Ord(NUMMUSIC) - 1 do
    if S_music[i].mp3stream <> nil then
    begin
      s := S_music[i].mp3stream;
      for j := i + 1 to Ord(NUMMUSIC) - 1 do
        if S_music[j].mp3stream = s then
          S_music[j].mp3stream := nil;
      FreeAndNil(S_music[i].mp3stream);
    end;
end;


end.

